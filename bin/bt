#!/usr/bin/env bash

source bot-funcs.sh
source bot-util-funcs.sh

echo "bot-test"
echo

init_oolite_window

pause_shell "Press [Enter] when you're ready"

# Width and height of 'in hold' market items
IN_HOLD_W=25
IN_HOLD_H=18

# Origin of first item (food) on market screen
ITEM_X=551
ITEM_Y=130

# Origin of items on market screen. Because the height is actually
# somewhere between 18 and 19 pixels, the starting point of some
# items is incremented by 1 occasionally.
FOOD_Y=$ITEM_Y
((ITEM_Y += IN_HOLD_H))
TEXTILES_Y=$ITEM_Y
((ITEM_Y += IN_HOLD_H))
RADIOACTIVES_Y=$ITEM_Y
((ITEM_Y += IN_HOLD_H))
SLAVES_Y=$ITEM_Y
((ITEM_Y += IN_HOLD_H))
LIQUOR_Y=$ITEM_Y
((ITEM_Y += IN_HOLD_H + 1))
LUXURIES_Y=$ITEM_Y
((ITEM_Y += IN_HOLD_H))
NARCOTICS_Y=$ITEM_Y
((ITEM_Y += IN_HOLD_H))
COMPUTERS_Y=$ITEM_Y
((ITEM_Y += IN_HOLD_H))
MACHINERY_Y=$ITEM_Y
((ITEM_Y += IN_HOLD_H))
ALLOYS_Y=$ITEM_Y
((ITEM_Y += IN_HOLD_H))
FIREARMS_Y=$ITEM_Y
((ITEM_Y += IN_HOLD_H + 1))
FURS_Y=$ITEM_Y
((ITEM_Y += IN_HOLD_H))
MINERALS_Y=$ITEM_Y
((ITEM_Y += IN_HOLD_H))
GOLD_Y=$ITEM_Y
((ITEM_Y += IN_HOLD_H))
PLATINUM_Y=$ITEM_Y
((ITEM_Y += IN_HOLD_H))
GEMSTONES_Y=$ITEM_Y
((ITEM_Y += IN_HOLD_H + 1))
ALIENITEMS_Y=$ITEM_Y

#
# Generate and store SHAs of the current 'in hold' cargo state for each item
#
get_current_cargo_state() {
    foodSHA=$(capture_snapshot $IN_HOLD_W $IN_HOLD_H $ITEM_X $FOOD_Y | sha256sum)
    textilesSHA=$(capture_snapshot $IN_HOLD_W $IN_HOLD_H $ITEM_X $TEXTILES_Y | sha256sum)
    radioactivesSHA=$(capture_snapshot $IN_HOLD_W $IN_HOLD_H $ITEM_X $RADIOACTIVES_Y | sha256sum)
    slavesSHA=$(capture_snapshot $IN_HOLD_W $IN_HOLD_H $ITEM_X $SLAVES_Y | sha256sum)
    liquorSHA=$(capture_snapshot $IN_HOLD_W $IN_HOLD_H $ITEM_X $LIQUOR_Y | sha256sum)
    luxuriesSHA=$(capture_snapshot $IN_HOLD_W $IN_HOLD_H $ITEM_X $LUXURIES_Y | sha256sum)
    narcoticsSHA=$(capture_snapshot $IN_HOLD_W $IN_HOLD_H $ITEM_X $NARCOTICS_Y | sha256sum)
    computersSHA=$(capture_snapshot $IN_HOLD_W $IN_HOLD_H $ITEM_X $COMPUTERS_Y | sha256sum)
    machinerySHA=$(capture_snapshot $IN_HOLD_W $IN_HOLD_H $ITEM_X $MACHINERY_Y | sha256sum)
    alloysSHA=$(capture_snapshot $IN_HOLD_W $IN_HOLD_H $ITEM_X $ALLOYS_Y | sha256sum)
    firearmsSHA=$(capture_snapshot $IN_HOLD_W $IN_HOLD_H $ITEM_X $FIREARMS_Y | sha256sum)
    fursSHA=$(capture_snapshot $IN_HOLD_W $IN_HOLD_H $ITEM_X $FURS_Y | sha256sum)
    mineralsSHA=$(capture_snapshot $IN_HOLD_W $IN_HOLD_H $ITEM_X $MINERALS_Y | sha256sum)
    goldSHA=$(capture_snapshot $IN_HOLD_W $IN_HOLD_H $ITEM_X $GOLD_Y | sha256sum)
    platinumSHA=$(capture_snapshot $IN_HOLD_W $IN_HOLD_H $ITEM_X $PLATINUM_Y | sha256sum)
    gemstonesSHA=$(capture_snapshot $IN_HOLD_W $IN_HOLD_H $ITEM_X $GEMSTONES_Y | sha256sum)
    alienitemsSHA=$(capture_snapshot $IN_HOLD_W $IN_HOLD_H $ITEM_X $ALIENITEMS_Y | sha256sum)
}


cap_to_img() {
    local originX=$1
    local originY=$2
    local fname=$3
    echo "in hold w: $IN_HOLD_W"
    echo "in hold h: $IN_HOLD_H"
    echo "item x: $originX"
    echo "item y: $originY"
    echo "fname: $fname"

    write_snapshot $IN_HOLD_W $IN_HOLD_H $originX $originY $fname
}

#
# Store SHAs of 'in hold' state images for later comparison
#
store_empty_cargo_state() {
    get_current_cargo_state

    foodSHAEmpty=$foodSHA
    textilesSHAEmpty=$textilesSHA
    radioactivesSHAEmpty=$radioactivesSHA
    slavesSHAEmpty=$slavesSHA
    liquorSHAEmpty=$liquorSHA
    luxuriesSHAEmpty=$luxuriesSHA
    narcoticsSHAEmpty=$narcoticsSHA
    computersSHAEmpty=$computersSHA
    machinerySHAEmpty=$machinerySHA
    alloysSHAEmpty=$alloysSHA
    firearmsSHAEmpty=$firearmsSHA
    fursSHAEmpty=$fursSHA
    mineralsSHAEmpty=$mineralsSHA
    goldSHAEmpty=$goldSHA
    platinumSHAEmpty=$platinumSHA
    gemstonesSHAEmpty=$gemstonesSHA
    alienitemsSHAEmpty=$alienitemsSHA
}

food_in_hold() {
    if cargo_hold_contains "food"; then
        echo "There's food in the hold"
    else
        echo "No food in hold"
    fi

    echo $foodSHAEmpty
    echo $foodSHA
}

#
# Return 0 if cargo is in hold, 1 otherwise
# Arg: name of item to test for (ie. "food")
# Ex:
#   if cargo_hold_contains "food"; then
#       do true
#   else
#       do false
#   fi
#
cargo_hold_contains() {
    local item=$1
    # Store the NAME of a variable containing the empty item SHA
    local emptyItemVar="${item}SHAEmpty"
    # Store the NAME of a variable containing the current item SHA
    local currItemVar="${item}SHA"
    # Get the SHA from the value of the variable named emptyItemVar
    local emptyItem=${!emptyItemVar}
    # Get the SHA from the value of the variable named currItemVar
    local currItem=${!currItemVar}

    if [[ $emptyItem == $currItem ]]; then
        return 1 # false
    else
        return 0 # true
    fi
}

doit() {
    pause_shell "Enter after clearing out hold"
    store_empty_cargo_state

    pause_shell "Enter after updating food cargo"

    get_current_cargo_state
    food_in_hold
}

current_location_menu() {
    PS3="Select your current location: "
    options=($AG_PLANET_NAME $IND_PLANET_NAME "Quit")
    select opt in "${options[@]}"
    do
        case $opt in
            $AG_PLANET_NAME)
                currPlanet="ag"
                break
                ;;
            $IND_PLANET_NAME)
                currPlanet="ind"
                break
                ;;
            "Quit")
                currPlanet="quit"
                break
                ;;
            *)
                echo "Invalid choice"
                ;;
        esac
    done

    if [[ "$currPlanet" == "quit" ]]; then
        echo "Goodbye."
        exit 0
    fi
}

#dump_market_images $1
#doit
current_location_menu

echo "You selected $currPlanet"

