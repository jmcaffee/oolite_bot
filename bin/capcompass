#!/usr/bin/env bash
##!/bin/bash -vx

source bot-util-funcs.sh

usage() {
    echo "Usage: ${0##*/} [options] [ W H X Y ]"
    echo
    echo "  Options:"
    echo "    -h, --help        - this help"
    echo "    -f, --file {file} - file to write data to"
    echo
    echo "  Summary:"
    echo "    Dump the compass data to a file or display the coordinates of"
    echo "    the compass direction (if no file output is indicated)"
    echo
    echo "    If W H X Y args are provided, the image captured will use them."
    echo "    If location args are not provided, the default values will be used."
    echo
    echo "    If writing to a file, the format of the output file is determined"
    echo "    by the file extension."
    echo "    Available extensions are .txt, .png, .jpg"
    echo
}

# Script flags, set to defaults
output=""
w=$COMPASS_WIDTH
h=$COMPASS_HEIGHT
x=$COMPASS_X
y=$COMPASS_Y

# Parse command line arguments
while (( "$#" )); do
    if [[ "$1" == "-f" ]]; then
        shift
        output=$1
        shift
    fi

    if [[ "$1" == "--file" ]]; then
        shift
        output=$1
        shift
    fi

    if [[ "$1" == "-h" ]]; then
        usage
        exit 0
    fi

    if [[ "$1" == "--help" ]]; then
        usage
        exit 0
    fi

    # Parse width, height, x and y
    if [ $# -ne 0 ]; then
        w=$1
        shift
    fi

    if [ $# -ne 0 ]; then
        h=$1
        shift
    fi

    if [ $# -ne 0 ]; then
        x=$1
        shift
    fi

    if [ $# -ne 0 ]; then
        y=$1
        shift
    fi

    # Check for proper number of args.
    if [ $# -ne 0 ]
    then
        usage
        exit 1
    fi
done


main() {
    init_oolite_window
    focus_oolite_window

    if [ -z $output ]; then
        greenEnough='#[0-5][0-5]F[5-9|A-F][0-5][0-5]'
        line=$(capture_snapshot $w $h $x $y | grep -m1 $greenEnough)
        to_coords $line

        echo
        echo "WxH: ${w}x${h}"
        echo "XxY: ${x}x${y}"
        echo
        echo "location: ${curX}x${curY}"
        echo
    else
        write_snapshot $w $h $x $y $output
        echo
        echo "Image written to $output"
        echo
    fi
}

main

